describe('CLI', () => {
  test.each([['-C'], ['--config-path']])('%s <path> should take the config from that path', () => {});
  test.each([['-c'], ['--configuration']])('%s <configuration> should choose that configuration', () => {});
  test('--keepLockFile should be suppress clearing the device lock file', () => {});
  test('--keepLockFile omission means clearing the device lock file', () => {});
  test('--inspect-brk should prepend "node --inspect-brk" to the command', () => {});
  test('-- <...explicitPassthroughArgs> should be forwarded to the test runner CLI as-is', () => {});

  describe('(mocha)', () => {
    test('given no extra args, should spawn cmd', () => {});
    test.each([['-o'], ['--runner-config']])(', when omitted, should be point to e2e/mocha.opts', () => {});
    test.each([['-o'], ['--runner-config']])('%s <path> should be aware of mocha.opts extension', () => {});
    test.each([['-o'], ['--runner-config']])('%s <path> should be aware of .mocharc extension', () => {});
    test.each([['-l'], ['--loglevel']])('%s <value> should be passed as CLI argument', () => {});
    test('--no-color should be passed as CLI argument', () => {});
    test.each([['-R'], ['--retries']])('%s <value> should print warning', () => {});
    test.each([['-R'], ['--retries']])('%s <value> should be ignored', () => {});
    test.each([['-r'], ['--reuse']])('%s <value> should be passed as CLI argument', () => {});
    test.each([['-u'], ['--cleanup']])('%s <value> should be passed as CLI argument', () => {});
    test.each([['-d'], ['--debug-synchronization']])('%s <value> should be passed as CLI argument', () => {});
    test.each([['-d'], ['--debug-synchronization']])('%s <value> should have default value = 3000', () => {});
    test.each([['-a'], ['artifacts-location']])('%s <value> should be passed as CLI argument', () => {});
    test('--record-logs <value> should be passed as CLI argument', () => {});
    test('--take-screenshots <value> should be passed as CLI argument', () => {});
    test('--record-videos <value> should be passed as CLI argument', () => {});
    test('--record-performance <value> should be passed as CLI argument', () => {});
    test('--record-timeline <value> should be passed as CLI argument', () => {});
    test.each([['-w'], ['workers']])('%s <value> should print "unsupported" warning', () => {});
    test.each([['-H'], ['headless']])('%s <value> should be passed as CLI argument', () => {});
    test('--gpu <value> should be passed as CLI argument', () => {});
    test('--device-launch-args should be passed as CLI argument', () => {});
    test('--use-custom-logger by default should be passed as CLI argument', () => {});
    test('--no-use-custom-logger should be prevent passing CLI argument', () => {});
    test('--no-use-custom-logger should be prevent passing CLI argument', () => {});
    test('--force-adb-install should be passed as CLI argument', () => {});
    test.each([['-n'], ['device-name']])('%s <value> should be passed as CLI argument', () => {});

    test('specifying direct test paths', () => {});
    test('e.g., --bail should be passed through', () => {});
    test('e.g., --reporter spec should be passed through', () => {});
    test('e.g., --bail e2e/Login.test.js should be split to --bail and e2e/Login.test.js', () => {});
  });

  describe('(jest)', () => {
    test('given no extra args, should spawn cmd', () => {});
    test.each([['-o'], ['--runner-config']])(', when omitted, should be point to e2e/config.json', () => {});
    test.each([['-o'], ['--runner-config']])('%s <path> should be point to the specified Jest config', () => {});
    test.each([['-l'], ['--loglevel']])('%s <value> should be passed as environment variable', () => {});
    test('--no-color should be passed as CLI argument', () => {});
    test.each([['-R'], ['--retries']])('%s <value> should execute successful run once', () => {});
    test.each([['-R'], ['--retries']])('%s <value> should execute unsuccessful run N extra times', () => {});
    test.each([['-R'], ['--retries']])('%s <value> should retain -- <...explicitPassthroughArgs>', () => {});
    test.each([['-r'], ['--reuse']])('%s <value> should be passed as environment variable', () => {});
    test.each([['-u'], ['--cleanup']])('%s <value> should be passed as environment variable', () => {});
    test.each([['-d'], ['--debug-synchronization']])('%s <value> should be passed as environment variable', () => {});
    test.each([['-d'], ['--debug-synchronization']])('%s <value> should have default value = 3000', () => {});
    test.each([['-a'], ['artifacts-location']])('%s <value> should be passed as environment variable', () => {});
    test('--record-logs <value> should be passed as environment variable', () => {});
    test('--take-screenshots <value> should be passed as environment variable', () => {});
    test('--record-videos <value> should be passed as environment variable', () => {});
    test('--record-performance <value> should be passed as environment variable', () => {});
    test('--record-timeline <value> should be passed as environment variable', () => {});
    test.each([['-w'], ['workers']])('%s <value> should be passed as CLI argument', () => {});
    test('--jest-report-specs should be passed by default as CLI argument', () => {});
    test('--jest-report-specs should not be passed with multiple workers enabled', () => {});
    test('--jest-report-specs should be passed with multiple workers if specified explicitly', () => {});
    test.each([['-H'], ['headless']])('%s <value> should be passed as environment variable', () => {});
    test('--gpu <value> should be passed as environment variable', () => {});
    test('--device-launch-args should be passed as environment variable', () => {});
    test('--use-custom-logger by default should be passed as environment variable', () => {});
    test('--no-use-custom-logger should be prevent passing environment variable', () => {});
    test('--no-use-custom-logger should be prevent passing environment variable', () => {});
    test('--force-adb-install should be passed as environment variable', () => {});
    test.each([['-n'], ['device-name']])('%s <value> should be passed as environment variable', () => {});
    test('specifying direct test paths', () => {});
    test('e.g., --debug should be passed through', () => {});
    test('e.g., --coverageProvider v8 should be passed through', () => {});
    test('e.g., --debug e2e/Login.test.js should be split to --debug and e2e/Login.test.js', () => {});
  });
});
